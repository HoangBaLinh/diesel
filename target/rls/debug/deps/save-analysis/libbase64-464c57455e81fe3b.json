{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3","program":"C:\\Users\\Admin\\.rustup\\toolchains\\1.40.0-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","base64","C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=464c57455e81fe3b","-C","extra-filename=-464c57455e81fe3b","--out-dir","e:\\developer\\diesel\\target\\rls\\debug\\deps","-L","dependency=e:\\developer\\diesel\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Admin\\.rustup/toolchains/1.40.0-x86_64-pc-windows-msvc"],"output":"e:\\developer\\diesel\\target\\rls\\debug\\deps\\libbase64-464c57455e81fe3b.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[15573766939920420124,8789793217196286309]},"crate_root":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src","external_crates":[{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7051201540145939802,10319888607268705196]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","num":2,"id":{"name":"core","disambiguator":[1026454463601085204,5956519655747842370]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14346745938995860826,6106505168515399711]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13202720578349867464,1862842275659476996]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5561144063536234256,7715548798258694697]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14610271732418635879,6772691447709284036]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4406516221557685466,15675910168565901142]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15997156870004117332,17234155162274038776]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[5592790853754669538,10741615159245382754]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8783235745414743982,17300328997249526776]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[1439570206316701055,1850678272192971880]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6136169599652282497,8536962176442599555]}},{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1707569757905254316,14241360972436779925]}}],"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":0,"byte_end":8764,"line_start":1,"line_end":243,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\mod.rs","byte_start":19033,"byte_end":19046,"line_start":3,"line_end":3,"column_start":24,"column_end":37},"alias_span":null,"name":"DecoderReader","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\mod.rs","byte_start":109939,"byte_end":109952,"line_start":3,"line_end":3,"column_start":24,"column_end":37},"alias_span":null,"name":"EncoderWriter","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3920,"byte_end":3939,"line_start":88,"line_end":88,"column_start":24,"column_end":43},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4019,"byte_end":4025,"line_start":90,"line_end":90,"column_start":25,"column_end":31},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4027,"byte_end":4040,"line_start":90,"line_end":90,"column_start":33,"column_end":46},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4042,"byte_end":4059,"line_start":90,"line_end":90,"column_start":48,"column_end":65},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4153,"byte_end":4159,"line_start":94,"line_end":94,"column_start":25,"column_end":31},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4161,"byte_end":4174,"line_start":94,"line_end":94,"column_start":33,"column_end":46},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4176,"byte_end":4193,"line_start":94,"line_end":94,"column_start":48,"column_end":65},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4220,"byte_end":4239,"line_start":95,"line_end":95,"column_start":25,"column_end":44},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4241,"byte_end":4252,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":0,"byte_end":8764,"line_start":1,"line_end":243,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":46},{"krate":0,"index":74},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":182},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":322},{"krate":0,"index":338},{"krate":0,"index":337},{"krate":0,"index":335},{"krate":0,"index":259},{"krate":0,"index":340},{"krate":0,"index":347},{"krate":0,"index":346},{"krate":0,"index":344},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings)","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3318,"byte_end":3508,"line_start":61,"line_end":70,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3509,"byte_end":3532,"line_start":71,"line_end":71,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":9091,"byte_end":9096,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":69}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":16887,"byte_end":16900,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":17067,"byte_end":17078,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"fn (bytes: &[u8], config: Config) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\mod.rs","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":123}],"decl_id":null,"docs":" Implementations of `io::Read` to transparently decode base64.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3773,"byte_end":3807,"line_start":81,"line_end":81,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":20043,"byte_end":20056,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"DecoderReader","qualname":"::read::decoder::DecoderReader","value":"DecoderReader {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" A `Read` implementation that decodes base64 data read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":21770,"byte_end":21773,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<DecoderReader>::new","value":"fn (r: &'a mut R, config: Config) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that will read from the provided reader `r`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\mod.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":181}],"decl_id":null,"docs":" Implementations of `io::Write` to transparently handle base64.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3834,"byte_end":3868,"line_start":84,"line_end":84,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":112004,"byte_end":112017,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::write::encoder::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":" A `Write` implementation that base64 encodes data before delegating to the wrapped writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":113531,"byte_end":113534,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter>::new","value":"fn (w: &'a mut W, config: Config) -> EncoderWriter<'a, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that will write to the provided delegate writer `w`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":114444,"byte_end":114450,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter>::finish","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode all remaining buffered data and write it, including any trailing incomplete input\n triples and associated padding.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":125173,"byte_end":125179,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"fn <T> (input: T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":125112,"byte_end":125165,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":125684,"byte_end":125697,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"fn <T> (input: T, config: Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":125623,"byte_end":125676,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":126605,"byte_end":126622,"line_start":74,"line_end":74,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"fn <T> (input: T, config: Config, buf: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":126544,"byte_end":126597,"line_start":73,"line_end":73,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\encode.rs","byte_start":127898,"byte_end":127917,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"fn <T> (input: T, config: Config, output: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149252,"byte_end":149263,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149324,"byte_end":149337,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149680,"byte_end":149697,"line_start":37,"line_end":37,"column_start":5,"column_end":22},"name":"InvalidLastSymbol","qualname":"::decode::DecodeError::InvalidLastSymbol","value":"DecodeError::InvalidLastSymbol(usize, u8)","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\n This is indicative of corrupted or truncated Base64.\n Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\n symbols that are in the alphabet but represent nonsensical encodings.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149142,"byte_end":149153,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"DecodeError::{InvalidByte, InvalidLength, InvalidLastSymbol}","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":307}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":151043,"byte_end":151049,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"fn <T> (input: T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":150982,"byte_end":151035,"line_start":83,"line_end":83,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":151647,"byte_end":151660,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"fn <T> (input: T, config: Config) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":151586,"byte_end":151639,"line_start":104,"line_end":104,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":152537,"byte_end":152554,"line_start":133,"line_end":133,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"fn <T> (input: T, config: Config, buffer: &mut Vec<u8>) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":152476,"byte_end":152529,"line_start":132,"line_end":132,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":153810,"byte_end":153829,"line_start":169,"line_end":169,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"fn <T> (input: T, config: Config, output: &mut [u8]) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4511,"byte_end":4519,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4659,"byte_end":4666,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4892,"byte_end":4897,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":5011,"byte_end":5017,"line_start":116,"line_end":116,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::CharacterSet::Bcrypt","value":"CharacterSet::Bcrypt","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The bcrypt character set (uses `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789`).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":5179,"byte_end":5188,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"ImapMutf7","qualname":"::CharacterSet::ImapMutf7","value":"CharacterSet::ImapMutf7","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The character set used in IMAP-modified UTF-7 (uses `+` and `,`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":5349,"byte_end":5355,"line_start":124,"line_end":124,"column_start":5,"column_end":11},"name":"BinHex","qualname":"::CharacterSet::BinHex","value":"CharacterSet::BinHex","parent":{"krate":0,"index":322},"children":[],"decl_id":null,"docs":" The character set used in BinHex 4.0 files.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":4358,"byte_end":4370,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"CharacterSet::{Standard, UrlSafe, Crypt, Bcrypt, ImapMutf7, BinHex}","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":6388,"byte_end":6394,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":6713,"byte_end":6716,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (char_set: CharacterSet, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":6951,"byte_end":6954,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"pad","qualname":"<Config>::pad","value":"fn (self, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to pad output with `=` characters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":7236,"byte_end":7262,"line_start":181,"line_end":181,"column_start":12,"column_end":38},"name":"decode_allow_trailing_bits","qualname":"<Config>::decode_allow_trailing_bits","value":"fn (self, allow: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to emit errors for nonzero trailing bits.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":7447,"byte_end":7455,"line_start":190,"line_end":190,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":7625,"byte_end":7640,"line_start":197,"line_end":197,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":7807,"byte_end":7815,"line_start":204,"line_end":204,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":7983,"byte_end":7998,"line_start":211,"line_end":211,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":8159,"byte_end":8164,"line_start":218,"line_end":218,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":8313,"byte_end":8319,"line_start":225,"line_end":225,"column_start":11,"column_end":17},"name":"BCRYPT","qualname":"::BCRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Bcrypt character set\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":8481,"byte_end":8491,"line_start":232,"line_end":232,"column_start":11,"column_end":21},"name":"IMAP_MUTF7","qualname":"::IMAP_MUTF7","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" IMAP modified UTF-7 requirements\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":8644,"byte_end":8650,"line_start":239,"line_end":239,"column_start":11,"column_end":17},"name":"BINHEX","qualname":"::BINHEX","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" BinHex character set\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":9447,"byte_end":9461,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":11781,"byte_end":11791,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":11966,"byte_end":11976,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":16977,"byte_end":16990,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":17269,"byte_end":17282,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":17603,"byte_end":17616,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":21112,"byte_end":21125,"line_start":57,"line_end":57,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":21662,"byte_end":21675,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":24988,"byte_end":25001,"line_start":161,"line_end":161,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":113015,"byte_end":113028,"line_start":79,"line_end":79,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":113415,"byte_end":113428,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":117552,"byte_end":117565,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":124408,"byte_end":124421,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149735,"byte_end":149746,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":150297,"byte_end":150308,"line_start":55,"line_end":55,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":5365,"byte_end":5377,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":6662,"byte_end":6668,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3764,"byte_end":3771,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3816,"byte_end":3820,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":3877,"byte_end":3882,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":126}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":9447,"byte_end":9461,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":11781,"byte_end":11791,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\chunked_encoder.rs","byte_start":11966,"byte_end":11976,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":0,"index":22}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":16977,"byte_end":16990,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":17269,"byte_end":17282,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\display.rs","byte_start":17603,"byte_end":17616,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":0,"index":22}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":21112,"byte_end":21125,"line_start":57,"line_end":57,"column_start":38,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":7580}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":21662,"byte_end":21675,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\read\\decoder.rs","byte_start":24988,"byte_end":25001,"line_start":161,"line_end":161,"column_start":28,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":113015,"byte_end":113028,"line_start":79,"line_end":79,"column_start":35,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":7580}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":113415,"byte_end":113428,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":117552,"byte_end":117565,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":142},"to":{"krate":1,"index":2914}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\write\\encoder.rs","byte_start":124408,"byte_end":124421,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":1731}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":149735,"byte_end":149746,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\decode.rs","byte_start":150297,"byte_end":150308,"line_start":55,"line_end":55,"column_start":23,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":5365,"byte_end":5377,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Admin\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\base64-0.12.3\\src\\lib.rs","byte_start":6662,"byte_end":6668,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}}]}